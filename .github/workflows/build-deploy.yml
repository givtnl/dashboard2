name: Build and deploy to Azure
on:
  push:
    branches: [ feat/kubernetes ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Installing NPM packages
        run: npm install

      - name: Install the Angular CLI
        run: npm install -g @angular/cli@15

      - name: Build the Angular webapp
        if: ${{endsWith(github.ref, '/feat/kubernetes')}}
        run: ng build 

      - name: Build the Angular webapp for production
        if: ${{endsWith(github.ref, '/main')}}
        run: ng build --configuration=production

      - name: Login to Dockerhub
        if: ${{ endsWith(github.ref, '/main')}} && ${{ endsWith(github.ref, '/develop')}}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        if: ${{ endsWith(github.ref, '/main')}} && ${{ endsWith(github.ref, '/develop')}}
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        if: ${{ endsWith(github.ref, '/main')}} && ${{ endsWith(github.ref, '/develop')}}
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/dashboard-two:${{ github.sha }}

  deploy:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-kubectl@v3
        id: install
      - name: Log in to K8S Dev
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.DEV_EU_KUBECONF }}
      - name: Set hostname for kube bake
        run: |
          echo "HOSTNAME=dashboard2.givtapp.net" >> $GITHUB_ENV
   
      - uses: azure/k8s-bake@v2.2
        with:
          renderEngine: "helm"
          helmChart: ".kube-manifests/"
          overrides: | 
            dockerTag:${{ github.sha }}
            hostName:${{ env.HOSTNAME }}
          helm-version: "latest"
        id: bake              
      - name: Deploy to the Kubernetes cluster
        uses: Azure/k8s-deploy@v4
        with:
          namespace: default
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            givt/dashboard-two:${{ github.sha }}